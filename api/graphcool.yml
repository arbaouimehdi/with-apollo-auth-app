# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    github.com/graphcool/examples
#
# Here are the reference docs of this definition format:
# https://docs-next.graph.cool/reference/basics/project-configuration-opheidaix3
#
# Happy Coding!

# In the types.graphql you define your data schema
types: ./types.graphql

functions:
  # added by auth template:
  signup:
    type: resolver
    schema: src/authentication/signup.graphql
    handler:
      code: src/authentication/signup.js

  authenticate:
    type: resolver
    schema: src/authentication/authenticate.graphql
    handler:
      code: src/authentication/authenticate.js

  loggedInUser:
    type: resolver
    schema: src/authentication/loggedInUser.graphql
    handler:
      code: src/authentication/loggedInUser.js

  #send verification email - creates and sends uuid with url to user
  sendAccountActivationEmail:
    type: resolver
    schema: src/email-verification/sendAccountActivationEmail.graphql
    handler:
      code:
        src: src/email-verification/sendAccountActivationEmail.ts
        environment:
          MAILGUN_API_KEY: MAILGUN_API_KEY
          MAILGUN_SUBDOMAIN: mail.your-domain.com
          ACCOUNT_ACTIVATION_URL: https://www.YOUR_DOMAIN.com/activate-account

  # handles verification of user's email using supplied verification code
  activateAccount:
    type: resolver
    schema: src/email-verification/activateAccount.graphql
    handler:
      code: src/email-verification/activateAccount.ts

# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://docs-next.graph.cool/reference/auth/authorization/overview-iegoo0heez
permissions:
  - operation: User.read
    fields:
      - id
      - name
      - email

  # Your root tokens used for functions to get full access to the API
  # Read more here:
  # https://docs-next.graph.cool/reference/auth/authentication/authentication-tokens-eip7ahqu5o
rootTokens:
  - mytoken
